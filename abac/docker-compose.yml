version: '3'
services:
  cert:
    image: openjdk:8-jdk-alpine
    container_name: cert
    command: >
      sh -c "chmod +x /mnt/bin/gen-cert.sh
      && rm -rf /mnt/certs/common/* /mnt/certs/pdp-server/* /mnt/certs/ample-editor/*
      && /mnt/bin/gen-cert.sh pdp-server $E_ABAC_SERVER_KEYSTORE_PASSWORD $E_COMMON_TRUSTSTORE_PASSWORD
      && /mnt/bin/gen-cert.sh ample-editor $E_AMPLE_KEYSTORE_PASSWORD $E_COMMON_TRUSTSTORE_PASSWORD
      && touch /mnt/certs/common/.ready"
    working_dir: "/mnt/tpl"
    volumes:
      - ./conf-bin:/mnt/bin
      - ./conf/certs/common:/mnt/certs/common:rw
      - ./conf/certs/pdp-server:/mnt/certs/pdp-server:rw
      - ./conf/certs/ample-editor:/mnt/certs/ample-editor:rw
    networks:
      - asclepios

  conf:
    image: jwilder/dockerize
    container_name: conf
    depends_on:
      cert:
        condition: service_started
    entrypoint: >
      sh -c "while [ ! -f /mnt/certs/common/.ready ]; do sleep 1; done
      && dockerize -template /mnt/tpl/realm-export.json.tpl:/mnt/conf/realm-export.json"
    environment:
      APP_BASE_URL: ${E_APP_BASE_URL}
      KEYCLOAK_REALM: ${E_KEYCLOAK_REALM}
      KEYCLOAK_RESOURCE: ${E_KEYCLOAK_RESOURCE}
      KEYCLOAK_RESOURCE_SECRET: ${E_KEYCLOAK_RESOURCE_SECRET}
    volumes:
      - ./conf-tpl:/mnt/tpl
      - ./conf/certs/common:/mnt/certs/common:ro
      - ./conf:/mnt/conf:rw
    networks:
      - asclepios

  abac-zuul-proxy:
    image: registry.gitlab.com/asclepios-project/abac-authorization/abac-zuul-proxy:3.0.2
    container_name: abac-zuul-proxy
    restart: on-failure
    depends_on:
      pdp-server:
        condition: service_started
      keycloak:
        condition: service_started
    environment:
      TA_URL: http://ta:8000
      SSE_URL: http://sse:8080
      #PDP_DISABLED: 'true'
      PDP_ENDPOINTS: https://pdp-server:7071/checkJsonAccessRequest
      PDP_ACCESS_KEY: ${E_ABAC_SERVER_ACCESS_KEY}
#      PDP_TRUSTSTORE_FILE: ${E_PDP_TRUSTSTORE_FILE:-config/truststore-client.p12}
#      PDP_TRUSTSTORE_TYPE: ${E_PDP_TRUSTSTORE_TYPE:-PKCS12}
#      PDP_TRUSTSTORE_PASSWORD: ${E_PDP_TRUSTSTORE_PASSWORD:-asclepios}
      PDP_TRUSTSTORE_FILE: /abac-proxy/certs/common-truststore.p12
      PDP_TRUSTSTORE_TYPE: PKCS12
      PDP_TRUSTSTORE_PASSWORD: ${E_COMMON_TRUSTSTORE_PASSWORD}
      PDP_JWT_SECRET: ${E_PDP_JWT_SECRET:-asclepios}
      PDP_LOAD_BALANCE_METHOD: ORDER
      PDP_RETRY_COUNT: 1
      KEYCLOAK_ENABLED: 'true'
      KEYCLOAK_URL: ${E_KEYCLOAK_URL}
      KEYCLOAK_REALM: ${E_KEYCLOAK_REALM}
      KEYCLOAK_RESOURCE: ${E_KEYCLOAK_RESOURCE}
      KEYCLOAK_RESOURCE_SECRET: ${E_KEYCLOAK_RESOURCE_SECRET}
    ports:
      - 80:80
    volumes:
      - ./zuul-proxy:/abac-proxy/config
      - ./conf/certs/common:/abac-proxy/certs:ro
    networks:
      - asclepios
      - ssenetwork

  pdp-server:
    image: registry.gitlab.com/asclepios-project/abac-authorization/abac-server:latest
    container_name: pdp-server
    depends_on:
      conf:
        condition: service_started
    entrypoint: >
      sh -c "while [ ! -f certs/.ready ]; do sleep 1; done
      && cp -f ./certs/pdp-server* ./config/
      && ./run.sh "
    environment:
      ABAC_SERVER_KEYSTORE_FILE: /abac-server/certs/pdp-server-keystore.p12
      ABAC_SERVER_KEYSTORE_PASSWORD: ${E_ABAC_SERVER_KEYSTORE_PASSWORD}
      ABAC_SERVER_KEYSTORE_TYPE: PKCS12
      ABAC_SERVER_KEY_ALIAS: pdp-server
      ABAC_SERVER_ACCESS_KEY: ${E_ABAC_SERVER_ACCESS_KEY}
      ABAC_SERVER_API_KEY: ${E_ABAC_SERVER_API_KEY}
      ABAC_SERVER_JPA_HIBERNATE_DDL_AUTO: update
    volumes:
      - ./conf/certs/pdp-server:/abac-server/certs:rw
      - ./policies:/abac-server/policies
    ports:
      - "7071:7071"
    networks:
      - asclepios

  keycloak:
    image: jboss/keycloak:9.0.2
    container_name: keycloak
    restart: always
    command:
      - "-b 0.0.0.0 -Djboss.http.port=8181 -Dkeycloak.import=/opt/jboss/keycloak/imports/realm-export.json"
    depends_on:
      conf:
        condition: service_started
      mysql:
        condition: service_healthy
    environment:
      KEYCLOAK_USER: ${E_KEYCLOAK_USER}
      KEYCLOAK_PASSWORD: ${E_KEYCLOAK_PASSWORD}
      PROXY_ADDRESS_FORWARDING: "true"
      DB_VENDOR: mysql
      DB_ADDR: mysql
      DB_PORT: 3306
      DB_DATABASE: ${E_MYSQL_DATABASE}
      DB_USER: ${E_MYSQL_USER}
      DB_PASSWORD: ${E_MYSQL_PASSWORD}
    ports:
      - 8181:8181
    volumes:
      - ./conf:/opt/jboss/keycloak/imports:ro
    networks:
      - asclepios

  mysql:
    image: mysql:5.5
    container_name: mysql
    restart: always
    depends_on:
      conf:
        condition: service_started
    healthcheck:
      #start_period: 30s
      test: [ "CMD-SHELL", 'mysql --database=$$MYSQL_DATABASE --password=$$MYSQL_ROOT_PASSWORD --execute="SELECT count(table_name) > 0 FROM information_schema.tables;" --skip-column-names -B' ]
      interval: 30s
      timeout: 10s
      retries: 4
    environment:
      MYSQL_ROOT_PASSWORD: ${E_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${E_MYSQL_DATABASE}
      MYSQL_USER: ${E_MYSQL_USER}
      MYSQL_PASSWORD: ${E_MYSQL_PASSWORD}
#    ports:
#      - 3306:3306
    volumes:
      - ./conf:/docker-entrypoint-initdb.d:ro
      - ./mysql-data:/var/lib/mysql
    networks:
      - asclepios
  
  ta-db:
    image: postgres
    expose:
      - "5432"
    networks:
      - asclepios
    volumes:
      - ./data/ta-db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${TA_DB_USER}
      POSTGRES_PASSWORD: ${TA_DB_PASSWORD}
      POSTGRES_DB: ${TA_DB_NAME}
      PGDATA: /var/lib/postgresql/data
  
  ta:
    image: uowcpc/asclepios-ta:0.4.1
    container_name: ta
    ports:
      - "8000:8000"
    expose:
      - "8000"
    networks:
      - asclepios
    depends_on:
      - ta-db
    environment:
      DJANGO_LOGLEVEL: ${TA_DJANGO_LOGLEVEL}
      DJANGO_DEBUG: ${TA_DJANGO_DEBUG}
      DJANGO_SECRET_KEY: ${TA_DJANGO_SECRET_KEY}
      DB_NAME: ${TA_DB_NAME}
      DB_USER: ${TA_DB_USER}
      DB_PASSWORD: ${TA_DB_PASSWORD}
      DB_HOST: ${TA_DB_HOST}
      DB_PORT: ${TA_DB_PORT}
      DB_PORT: ${TA_DB_PORT}
      ALLOWED_HOSTS: ${TA_ALLOWED_HOSTS}
      HASH_LENGTH: ${TA_HASH_LENGTH}
      IV: ${TA_IV}
      MODE: ${TA_MODE}
      KS: ${TA_KS}
      TEEP_SERVER: ${TA_TEEP_SERVER}
      SGX: ${TA_SGX}

  teep-server:
    image: registry.gitlab.com/asclepios-project/teep-deployer
    container_name: teep-server
    ports:
      - "5683:5683"
    expose:
      - "5683"
    networks:
      - asclepios
    devices:
      - /dev/sgx

  sse-db:
    image: postgres
    expose:
      - "5432"
    networks:
      - ssenetwork
    volumes:
      - ./data/sse-db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${SSE_SERVER_DB_USER}
      POSTGRES_PASSWORD: ${SSE_SERVER_DB_PASSWORD}
      POSTGRES_DB: ${SSE_SERVER_DB_NAME}
      PGDATA: /var/lib/postgresql/data

  sse:
    image: uowcpc/asclepios-server:0.5
    container_name: sse
    ports:
      - "8080:8080"
    expose:
      - "8080"
    networks:
      - ssenetwork
    depends_on:
      - sse-db
      - ta
      - minio
    environment:
      DJANGO_LOGLEVEL: ${SSE_SERVER_DJANGO_LOGLEVEL}
      ALLOWED_HOSTS: ${SSE_SERVER_ALLOWED_HOSTS}
      DJANGO_DEBUG: ${SSE_SERVER_DJANGO_DEBUG}
      DJANGO_SECRET_KEY: ${SSE_SERVER_DJANGO_SECRET_KEY}
      TA_SERVER: ${SSE_SERVER_TA_SERVER}
      DB_NAME: ${SSE_SERVER_DB_NAME}
      DB_USER: ${SSE_SERVER_DB_USER}
      DB_PASSWORD: ${SSE_SERVER_DB_PASSWORD}
      DB_HOST: ${SSE_SERVER_DB_HOST}
      DB_PORT: ${SSE_SERVER_DB_PORT}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME}
      MINIO_URL: ${MINIO_URL}
      MINIO_SSL_SECURE: ${MINIO_SSL_SECURE}
      MINIO_EXPIRE_GET: ${MINIO_EXPIRE_GET}
      MINIO_EXPIRE_PUT: ${MINIO_EXPIRE_PUT}

  minio:
    image: minio/minio
    container_name: minio
    volumes:
      - ./data/minio:/data
    expose:
      - "9000"
    ports:
      - "9000:9000"
    networks:
      - ssenetwork
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    command: server /data      

  sse-client:
    image: uowcpc/asclepios-client:0.8
    container_name: client
    ports:
      - "81:80"
    expose:
      - "80"
    networks:
      - asclepios
    depends_on:
      - sse
      - ta
    environment:
      ALLOWED_HOSTS: ${SSE_CLIENT_ALLOWED_HOSTS}
      DJANGO_DEBUG: ${SSE_CLIENT_DJANGO_DEBUG}
      DJANGO_SECRET_KEY: ${SSE_CLIENT_DJANGO_SECRET_KEY}
      TA_URL: ${SSE_CLIENT_TA_URL}
      SSE_URL: ${SSE_CLIENT_SSE_URL}
      SALT: ${SSE_CLIENT_SALT}
      IV: ${SSE_CLIENT_IV}
      ITER: ${SSE_CLIENT_ITER}
      KS: ${SSE_CLIENT_KS}
      TS: ${SSE_CLIENT_TS}
      MODE: ${SSE_CLIENT_MODE}
      ADATA: ${SSE_CLIENT_ADATA}
      ADATA_LEN: ${SSE_CLIENT_ADATA_LEN}
      HASH_LEN: ${SSE_CLIENT_HASH_LEN}
      CHUNK_SIZE: ${SSE_CLIENT_CHUNK_SIZE}
      NO_CHUNKS_PER_UPLOAD: ${SSE_CLIENT_NO_CHUNKS_PER_UPLOAD}
      SALT_TA: ${SSE_CLIENT_SALT_TA}
      IV_TA: ${SSE_CLIENT_IV_TA}
      ITER_TA: ${SSE_CLIENT_ITER_TA}
      KS_TA: ${SSE_CLIENT_KS_TA}
      TS_TA: ${SSE_CLIENT_TS_TA}
      MODE_TA: ${SSE_CLIENT_MODE_TA}
      ADATA_TA: ${SSE_CLIENT_ADATA_TA}
      DATA_LEN_TA: ${SSE_CLIENT_ADATA_LEN_TA}
      SGX_ENABLE: ${SSE_CLIENT_SGX_ENABLE}
      CP_ABE_URL: ${SSE_CLIENT_CP_ABE_URL}
      DEBUG: ${SSE_CLIENT_DEBUG}
      AUTH: ${SSE_CLIENT_AUTH}
      SMALL_FILE: ${SSE_CLIENT_SMALL_FILE}  

networks:
 asclepios:
  driver: bridge
  name: asclepios
 ssenetwork:
  driver: bridge
  name: ssenetwork
